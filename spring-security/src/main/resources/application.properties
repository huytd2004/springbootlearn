spring.application.name=spring-security

# PostgreSQL


# JPA
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:postgresql://localhost:5432/spring_security_jwt
spring.datasource.username=postgres
spring.datasource.password=123456
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# JWT
jwt.secret=123456789012345678901234567890121111111111111
jwt.expiration=86400000 
# 24 hours in milliseconds

# Google OAuth2
spring.security.oauth2.client.registration.google.client-id=948710713474-94sa5pi8am99ff7n8hvf218mnvdamrs9.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile
# Google OAuth2 Provider Configuration
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

## Datasource configuration
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#
## H2 Console
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console
